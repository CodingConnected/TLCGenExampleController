/* BEGIN GEGENEREERDE HEADER */
/* REGEL BESTAND, GEBRUIKERS TOEVOEGINGEN              */
/* --------------------------------------------------- */

/* KRUISPUNT: 123456
              123456
              123456
              123456

   BESTAND:   123456reg.add
      CCOL:   11.0
    TLCGEN:   0.10.4.0
   CCOLGEN:   0.10.4.0
*/

/****************************** Versie commentaar ***********************************
 *
 * Versie   Datum        Ontwerper   Commentaar
 * 1.0.0    13-12-2021   Cyril       Nieuwe versie TLCGen (0.10.4.0) beta 13122021
 *
 ************************************************************************************/
/* EINDE GEGENEREERDE HEADER */


#ifdef CCOL_IS_SPECIAL
void SpecialSignals_Add(void)
{

}
#endif

void post_init_application()
{

}

void PreApplication_Add(void)
{
#ifndef AUTOMAAT
   #ifdef DUURTEST
      SCH[schcovuber] = 0;
   #endif
#endif
}

void KlokPerioden_Add(void)
{

}

void Aanvragen_Add(void)
{

}

boolv CorrectieRealisatieTijd_Add(void)
{
    /* let op! deze functie wordt in een loop aangeroepen (max. 100 iteraties). */
    boolv aanpassing = FALSE;
    
    /* Voeg hier zonodig eigen code toe, bijv:
     * aanpassing |= VTG2_Real_Los(fc32, fc31, T_max[tinl3231], T_max[tinl3132], hinl32, hinl31, hlos32, hlos31, (IH[hdrtk311] && IH[hdrtk321]));
     * aanpassing |= VTG2_Real_Los(fc31, fc32, T_max[tinl3132], T_max[tinl3231], hinl31, hinl32, hlos31, hlos32, (IH[hdrtk311] && IH[hdrtk321]));
     */
    
    return aanpassing;
}

void BepaalRealisatieTijden_Add(void)
{

}

void Maxgroen_Add(void)
{

}

void Wachtgroen_Add(void)
{

}

void Meetkriterium_Add(void)
{

}

void Meeverlengen_Add(void)
{

}

void Synchronisaties_Add(void)
{

}

void VersneldPrimair_Add(void)
{

}

void Alternatief_Add(void)
{

}

void Modules_Add(void)
{

}

void RealisatieAfhandeling_Add(void)
{

}

void FileVerwerking_Add(void)
{

}

void DetectieStoring_Add(void)
{

}

void PostApplication_Add(void)
{
#if (!defined AUTOMAAT && !defined AUTOMAAT_TEST && !defined VISSIM)
   /* TESTOMGEVING */
   /* ============ */

   if (TS &&
      (CIF_KLOK[CIF_JAAR] == 2099) && 
      (CIF_KLOK[CIF_MAAND] == 1) &&
      (CIF_KLOK[CIF_DAG] == 1) &&
      (CIF_KLOK[CIF_UUR] == 1) &&
      (CIF_KLOK[CIF_MINUUT] == 1) &&
      (CIF_KLOK[CIF_SECONDE] == 1)) 
   {
      stuffkey(F3KEY);
      stuffkey(F5KEY);
      stuffkey(F4KEY);
      stuffkey(F7KEY);
      //stuffkey(F10KEY); 
   }
#endif

#ifndef AUTOMAAT
    /* TESTOMGEVING */
    /* ============ */

    if (!CIF_GUS[usstarstar01]) { 
    ControleerNaloopEG(fc22, fc21, tnlfg2221, tnleg2221, NG, TRUE);
    ControleerNaloopEG(fc82, fc81, tnlfg8281, tnleg8281, NG, TRUE);
    ControleerNaloopEG(fc02, fc62, tnlfg0262, tnleg0262, NG, TRUE);
    ControleerNaloopEG(fc11, fc68, tnlfg1168, tnleg1168, NG, TRUE);
    ControleerNaloopEG(fc08, fc68, tnlfg0868, tnleg0868, NG, TRUE);

    ControleerInrijden(fc22, fc21, tlr2122, TRUE);
    ControleerInrijden(fc82, fc81, tlr8182, TRUE);
    ControleerInrijden(fc02, fc62, tlr6202, TRUE);
    ControleerInrijden(fc08, fc68, tlr6808, TRUE);
    ControleerInrijden(fc11, fc68, tlr6811, TRUE);

    ControleerVS(fc05, fc22, TRUE, TRUE);
    ControleerVS(fc05, fc32, TRUE, TRUE);
   }
#endif


#ifndef AUTOMAAT
    xyprintf(92, 0, "  d     Hm   Ht   Am   Dm");
    xyprintf(92, 1, "%s:  %3d  %3d  %3d  %3d", D_code[d11_1], TDH_max[d11_1], TDH_timer[d11_1], TDHA_max[d11_1], TDHDYN_max[d11_1]);
    xyprintf(92, 2, "%s:  %3d  %3d  %3d  %3d", D_code[d11_2], TDH_max[d11_2], TDH_timer[d11_2], TDHA_max[d11_2], TDHDYN_max[d11_2]);
    xyprintf(92, 3, "%s:  %3d  %3d  %3d  %3d", D_code[d11_3], TDH_max[d11_3], TDH_timer[d11_3], TDHA_max[d11_3], TDHDYN_max[d11_3]);
    xyprintf(92, 4, "%s:  %3d  %3d  %3d  %3d", D_code[d11_4], TDH_max[d11_4], TDH_timer[d11_4], TDHA_max[d11_4], TDHDYN_max[d11_4]);
#endif	


}

void pre_system_application(void)
{

}

void post_system_application(void)
{

}
void pre_msg_fctiming(void)
{

}

void post_system_application2(void)
{

}

void post_dump_application(void)
{

}

