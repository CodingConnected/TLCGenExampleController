/* KRUISPUNT: 123456
              123456
              123456
              123456

   BESTAND:   123456reg.add
      CCOL:   12.0
    TLCGEN:   12.4.0.4
   CCOLGEN:   12.4.0.4
*/

/****************************** Versie commentaar ***********************************
 *
 * Versie     Datum        Ontwerper   Commentaar
 * 12.4.0.5   05-03-2024   TLCGen      Ontwikkelversie versie TLCGen
 *
 ************************************************************************************/

void CorrectieNaloopCV(count fc2);


#ifdef CCOL_IS_SPECIAL
void SpecialSignals_Add(void)
{

}
#endif

void post_init_application()
{
}

void PreApplication_Add(void)
{
#ifndef AUTOMAAT
   #ifdef DUURTEST
      SCH[schcovuber] = 0;
   #endif
#endif

}


void KlokPerioden_Add(void)
{

}

void Aanvragen_Add(void)
{

}

boolv CorrectieRealisatieTijd_Add(void)
{
    /* let op! deze functie wordt in een loop aangeroepen (max. 100 iteraties). */
    boolv aanpassing = FALSE;
    
    /* Voeg hier zonodig eigen code toe, bijv:
     * aanpassing |= VTG2_Real_Los(fc32, fc31, T_max[tinl3231], T_max[tinl3132], hinl32, hinl31, hlos32, hlos31, (IH[hdrtk311] && IH[hdrtk321]));
     * aanpassing |= VTG2_Real_Los(fc31, fc32, T_max[tinl3132], T_max[tinl3231], hinl31, hinl32, hlos31, hlos32, (IH[hdrtk311] && IH[hdrtk321]));
     */
    
    return aanpassing;
}

void BepaalRealisatieTijden_Add(void)
{
}

void Maxgroen_Add(void)
{
}

void Wachtgroen_Add(void)
{
}

void Meetkriterium_Add(void)
{
}

void Meeverlengen_Add(void)
{
/*
      CorrectieNaloopCV(fc21);
      CorrectieNaloopCV(fc62);
      CorrectieNaloopCV(fc68);
      CorrectieNaloopCV(fc81);

#ifndef AUTOMAAT
   int fc;
   for (fc = 0; fc < FCMAX; ++fc)
   {
      xyprintf(100, fc, "fc%2s CALW = %4d", FC_code[fc], CALW[fc]);
      xyprintf(120, fc, "PRI_CALW = %4d", PRI_CALW);
   }
#endif
*/
}

void Synchronisaties_Add(void)
{
}

void VersneldPrimair_Add(void)
{

}

void Alternatief_Add(void)
{
}

void Modules_Add(void)
{
}

void RealisatieAfhandeling_Add(void)
{
}

void FileVerwerking_Add(void)
{

}

void DetectieStoring_Add(void)
{

}

void PostApplication_Add(void)
{

#if (!defined AUTOMAAT && !defined AUTOMAAT_TEST && !defined VISSIM)

   /* TESTOMGEVING */
   /* ============ */

   if (TS &&
      (CIF_KLOK[CIF_JAAR] == 2099) && 
      (CIF_KLOK[CIF_MAAND] == 1) &&
      (CIF_KLOK[CIF_DAG] == 1) &&
      (CIF_KLOK[CIF_UUR] == 1) &&
      (CIF_KLOK[CIF_MINUUT] == 1) && 
      (CIF_KLOK[CIF_SECONDE] == 1))
   {
      stuffkey(F3KEY);
      stuffkey(F5KEY);
      stuffkey(F4KEY);
      stuffkey(F7KEY);
      //stuffkey(F10KEY); 
   }
#endif

}

void WachttijdvoorspellersWachttijd_Add()
{
    
}

void pre_system_application(void)
{

}

void post_system_application(void)
{

}

void pre_msg_fctiming(void)
{
}

void post_system_application2(void)
{
}

void post_dump_application(void)
{
}



void CorrectieNaloopCV(count fc2)

{
 /*  03/04/2024 Jonathan de Vries
   * Doel:
   * conflicten van nalooprichtingen alternatief realiseren en daarmee meeverlenggroen voedende richting beeindigen
   *
   * de functie kcv(i) in mlefunc.c wordt aangeroepen door max_tar_to(i) voor het bepalen van PAR[i];
   * indien CV[k] waar is retourneert max_tar_to(i) ruimte NG. Dan geen alternatieve realisatie.
   * Indien k een nalooprichting is en de voedende richting in MG[] staat blijft de alternatieve realisatie onterecht uit.
   *
   * Indien de PAR[i] waar is, mag deze volgens langstwachtende_alternatief_modulen() worden geraliseerd. Binnen deze functie
   * leidt de functie set_ARLWML() niet tot een AA[i] wegens het opstaan van CV[k] als van de aanwezigheid van een RW[k]
   *
   * Onderstaande correctie op nalopen betreft het tijdelijk intrekken van de CV[] variabele als van tijdelijke verplaatsing van RW[k]&BIT2 naar YW[k]&BIT2]
   * correctie toepassen eind Meeverlengen_Add, voorafgaand RealisatieAfhandeling(void)
   */

   YW[fc2] &= ~BIT2;
   YW[fc2] |= (WG[fc2] && (RW[fc2] == BIT2)) ? BIT2 : FALSE;
   RW[fc2] = (WG[fc2] && (YW[fc2] & BIT2)) ? FALSE : RW[fc2];
   CV[fc2] = (WG[fc2] && (YW[fc2] == BIT2)) ? FALSE : CV[fc2];
   CV[fc2] |= EWG[fc2];
}
